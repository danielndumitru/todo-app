:root {
  --background: #101114;
  --background2: linear-gradient(90deg, #4b6cb7 0%, #182848 100%);
  --primary-color: #1c1d20;
  --secondary-color: rgba(255, 255, 255, 0.3);
  --secondary-color2: rgba(255, 255, 255, 0.6);
  --accent-color: rgba(0, 255, 196, 0.8);
  --accent-color-title: rgba(0, 255, 196, 1); /*#00ffc4; */
  --text-color: #f9f9f9;
}

/* Add this near the top of the file, after the :root section */
.version-display {
  position: fixed;
  top: 10px;
  left: 10px;
  font-size: 0.8rem;
  color: var(--secondary-color2);
  background: rgba(255, 255, 255, 0.1);
  padding: 4px 8px;
  border-radius: 12px;
  backdrop-filter: blur(5px);
  -webkit-backdrop-filter: blur(5px);
  z-index: 100;
}

/* Reset and base styles */
* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

html,
body {
  height: 100%;
  width: 100%;
  overflow: hidden; /* Prevent body scroll */
}

body {
  background-image: url(./background/pawel-czerwinski-ZkzobNDayXo-unsplash.webp);
  background-position: center;
  background-repeat: no-repeat;
  background-size: cover;
  background-attachment: fixed; /* Keep background fixed while scrolling */
  font-family: "Segoe UI", Tahoma, Geneva, Verdana, sans-serif;
  font-size: 16pt;
  color: var(--text-color);
}

.main {
  height: 100vh;
  width: 100vw;
  display: flex;
  flex-direction: column;
  align-items: center;
  padding: 10px;
  padding-top: 40px; /* Increased to make room for version display */
  overflow: hidden;
}

h1 {
  margin: 20px 0;
  font-size: clamp(2rem, 5vw, 3rem); /* Responsive font size */
  font-weight: 800;
  text-transform: uppercase;
  text-align: center;
  color: var(--accent-color-title);
}

.wrapper {
  flex: 1;
  width: min(95vw, 1200px); /* Responsive width with max-width */
  max-width: 1200px;
  display: flex;
  flex-direction: column;
  gap: 5px;
  background: rgba(255, 255, 255, 0.04);
  border-radius: 25px;
  box-shadow: 0 4px 30px rgba(0, 0, 0, 5);
  backdrop-filter: blur(10px);
  -webkit-backdrop-filter: blur(10px);
  border: 1px solid rgba(255, 255, 255, 0.15);
  padding: 15px;
  overflow: hidden;
  margin-bottom: 5px; /* Space for footer */
}

/* Update form styles */
#todo-form {
  display: flex;
  flex: 1;
  position: relative;
  /* display: inline-block; */
  /* left: 0px; */
  /* right: 80px; */
  margin-right: 0px;
  background: none;
}

/* #todo-input {
  width: 100%;
  box-sizing: border-box;
  padding: 12px 20px;
  padding-right: 50px;
  background: none;
  border: 1px solid rgba(255, 255, 255, 0.5);
  border-radius: 1000px;
  font: inherit;
  color: var(--text-color);
  caret-color: var(--accent-color);
  height: 40px;
} */
#todo-input {
  width: 100%; /* Take all remaining space */
  padding: 10px 15px;
  padding-right: 45px; /* Space for the button */
  height: 40px;
  font-size: 1rem;
  background: none;
  background: none;
  border: 1px solid rgba(255, 255, 255, 0.5);
  border-radius: 1000px;
  color: var(--text-color);
  caret-color: var(--accent-color);
}

#todo-input:focus {
  outline: none;
}

#add-button {
  position: absolute;
  right: 3px;
  top: 50%;
  transform: translateY(-50%);
  width: 35px;
  height: 35px;
  padding: 6px;
  background-color: var(--accent-color);
  border: none;
  border-radius: 50%;
  cursor: pointer;
  display: flex;
  align-items: center;
  justify-content: center;
  transition: transform 0.2s ease;
  -webkit-tap-highlight-color: transparent;
  /* z-index: 2; */
}

#add-button svg {
  width: 20px;
  height: 20px;
  fill: var(--background);
}

/* Remove the ::before content since we're using SVG */
#add-button::before {
  content: none;
}

/* Update hover and active states */
@media (hover: hover) {
  #add-button:hover {
    transform: translateY(-50%) scale(1.1);
  }
}

@media (hover: none) {
  #add-button:active {
    transform: translateY(-50%) scale(1.1);
  }
}

/* here sort-select and search-icon */

.form-wrapp {
  position: relative;
  display: flex;
  flex-direction: row;
  /* gap: 5px; */
  /* margin-bottom: 0px; */
  width: 100%;
  align-items: center;
  justify-content: center;
}

.form-container {
  display: flex;
  flex-direction: row;
  /* position: relative; */
  /* gap: 5px; */
  /* margin-bottom: 0; */
  width: 100%;
  align-items: center;
  justify-content: space-between;
  gap: 5px;
  /* padding: 0 5px; */
}

/* Update existing sort select styles  - original*/
/* #sort-select {
  position: absolute;
  right: 40px;
  top: 0;
  min-width: fit-content;
  height: 40px;
  padding: 0 10px;
  background: transparent;
  border: 1px solid rgba(255, 255, 255, 0.5);
  border-radius: 25px;
  color: var(--text-color);
  font: inherit;
  font-size: 0.9rem;
  cursor: pointer;
  transition: transform 0.2s ease;
  outline: none;
  margin-left: 10px;
} */

#search-input {
  min-width: 40px;
  height: 40px;
  margin-right: 0px;
}
#sort-select {
  min-width: 70px;
  padding: 0 10px;
  height: 40px;
  margin-right: 0px;
  background: transparent;
  border: 1px solid rgba(255, 255, 255, 0.5);
  border-radius: 25px;
  color: var(--text-color);
  font: inherit;
  font-size: 0.9rem;
  cursor: pointer;
  transition: transform 0.2s ease;
  outline: none;
}

/* Add hover effect to match add button */
#sort-select:hover {
  /* transform: scale(1.1); */
  border: 1px solid var(--accent-color);
  transition: 600ms ease-in-out;
}

/* Style the select options */
#sort-select option {
  background: rgba(21, 21, 21, 0.9);
  color: var(--text-color);
  padding: 0px 8px;
}

/* .search-wrapper {
  position: relative;
  display: flex;
  justify-content: flex-end;
  align-items: center;
  height: 40px;
  margin-left: 5px;
} */

.search-icon {
  position: absolute;
  right: 3px;
  top: 50%;
  transform: translateY(-50%);
  background: none;
  border: none;
  padding: 8px;
  cursor: pointer;
  z-index: 3;
  display: flex;
  align-items: center;
  justify-content: center;
  border-radius: 50%;
  transition: background-color 0.3s ease;
  border: 1px solid rgba(255, 255, 255, 0.5);
  width: 35px;
  height: 35px;
}

.search-icon svg {
  fill: var(--secondary-color);
  transition: fill 0.3s ease;
}

.search-icon:hover {
  background: rgba(255, 255, 255, 0.1);
}

.search-icon:hover svg {
  fill: var(--accent-color);
}

/* Update search input styles */
.search-input {
  /* position: absolute; */
  right: 0;
  /* top: 0; */
  width: 0;
  height: 100%;
  padding: 0;
  background: none;
  border: 1px solid rgba(255, 255, 255, 0.5);
  border-radius: 25px;
  color: var(--text-color);
  font: inherit;
  font-size: 1rem;
  opacity: 0;
  visibility: hidden;
  transition: all 0.3s ease;
  z-index: 2;
  transform-origin: right;
}

.search-input:focus {
  outline: none;
}

.search-input.active {
  width: 100%;
  opacity: 1;
  visibility: visible;
  padding: 8px 45px 8px 15px;
  background: none;
  border: 1px solid rgba(255, 255, 255, 0.5);
}

/* Update filter wrapper styles */
/* .filter-wrapper {
  display: flex;
  flex-direction: row;
  gap: 5px;
  margin-bottom: 15px;
  align-items: center;
  justify-content: flex-end;
  flex-shrink: 0;
  width: 115px;
} */

/* .search-input { */
/* position: absolute; */
/* right: 100%; Position to the left of the icon */
/* width: 40px; */
/* height: 100%; */
/* padding: 8px 8px 8px 15px; Adjust left padding */
/* background: var(--primary-color); Solid background */
/* border: 1px solid rgba(255, 255, 255, 0.5); */
/* border-radius: 25px; */
/* color: var(--text-color); */
/* font: inherit; */
/* caret-color: var(--accent-color); */
/* opacity: 0; */
/* visibility: hidden; */
/* transition: all 0.3s ease; */
/* z-index: 3; */
/* } */

/* Update search icon styles */

/* Active states */
/* .form-container.active .search-input,
.search-input.active {
  width: 100%;
  opacity: 1;
  visibility: visible;
  padding: 8px 45px 8px 15px;
} */

.invisible {
  width: 80px !important;
  padding: 0 !important;
  margin: 0 !important;
  opacity: 0 !important;
  visibility: hidden !important;
  transition: all 0.3s ease !important;
  pointer-events: none !important;
}

@media only screen and (max-width: 768px) {
  /* #todo-form {
    align-items: center;
    position: relative; /* Ensure this is not being overridden */
  /* display: inline-block; */
  /* margin-bottom: 15px; */
  /* } */

  #todo-input {
    width: 100%;
    font-size: 14px;
    padding-right: 45px; /* Ensure there is enough space for the button */
    height: 40px;
  }

  #add-button {
    position: absolute; /* Check in developer tools if this rule is applied */
    right: 6px;
    top: 50%;
    transform: translateY(-50%);
    width: 30px;
    height: 30px;
    padding: 4px;
    margin: 0;
  }

  #add-button svg {
    width: 18px;
    height: 18px;
  }
  /* .search-input.active {
    width: calc(100% - 120px);
  } */
  .form-container {
    padding: 0;
    gap: 5px;
  }
}

@media only screen and (max-width: 480px) {
  /* #todo-form {
    margin-bottom: 12px;
    position: relative;
    display: inline-block;
  } */

  #todo-input {
    height: 40px;
    padding-right: 42px;
    font-size: 13px;
  }

  #add-button {
    top: 50%;
    transform: translateY(-50%);
    width: 28px;
    height: 28px;
    right: 6px;
    padding: 4px;
  }

  #add-button svg {
    width: 16px;
    height: 16px;
  }
  /* .search-input.active {
    width: calc(100% - 100px);
  } */
  .form-container {
    gap: 5px;
  }
}

.todo {
  width: 100%;
  margin-bottom: 10px;
  padding: 12px;
  background: rgba(255, 255, 255, 0.1);
  border-radius: 16px;
  display: flex;
  align-items: center;
  gap: 8px;
  min-height: 45px;
  transition: all 0.3s ease;
}

.todo.dragging {
  opacity: 0.5;
  box-shadow: 0 5px 15px rgba(0, 0, 0, 0.3);
}

.todo .todo-text {
  flex: 1;
  min-width: 0;
  padding: 5px;
  padding-right: 0;
  overflow-wrap: break-word;
  word-break: break-word;
}

.form1 {
  width: 60%;
  position: relative;
  display: flex;
  flex-direction: column; /* Stack input and button vertically */
  gap: 10px;
  padding: 5px;
  flex-grow: 1;
}

.form1-container {
  display: flex;
  align-items: center;
  gap: 8px;
}

.input1 {
  width: 100%;
  padding: 10px 15px;
  background: none;
  border: 1px solid rgba(255, 255, 255, 0.5);
  border-radius: 1000px;
  font: inherit;
  color: var(--text-color);
  caret-color: var(--accent-color);
}

/* .button1 {
  padding: 3px;
  background: none;
  border: none;
  display: flex;
  justify-content: center;
  align-items: center;
  cursor: pointer;
} */

/* .button1 svg {
  transition: 600ms ease-in-out;
} */

/* .button1:hover svg {
  fill: #00ffc4;
} */

#todo-list:focus-within > .todo:not(:focus-within) {
  filter: blur(4px);
  transition: 600ms ease-in-out;
}

#todo-list:focus-within > .form1 {
  filter: none;
  z-index: 1;
}

.form1:focus-within {
  filter: none !important;
  z-index: 1;
}

.todo-text {
  overflow-x: auto;
  scrollbar-width: 0.3rem;
}

.scroll {
  flex: 1;
  overflow-y: auto;
  padding: 0.5rem;
  margin-right: -0.5rem;
  margin-bottom: 5px;
  scroll-behavior: smooth;
  scroll-snap-type: y proximity;
  min-height: 0;
}

.scroll::-webkit-scrollbar,
.todo-text::-webkit-scrollbar {
  width: 0.5rem;
  height: 0.5rem;
}

.scroll::-webkit-scrollbar-thumb,
.todo-text::-webkit-scrollbar-thumb {
  background-color: var(--secondary-color);
  border-radius: 0.3rem;
}

.scroll::-webkit-scrollbar-track,
.todo-text::-webkit-scrollbar-track {
  display: none;
}

.description-button,
.edit-button,
.delete-button,
.button1 {
  padding: 3px;
  background: none;
  border: none;
  display: flex;
  justify-content: center;
  align-items: center;
  cursor: pointer;
}
.description-button svg,
.edit-button svg,
.delete-button svg,
.button1 svg {
  transition: 600ms ease-in-out;
  fill: var(--secondary-color);
}

.description-button:hover svg,
.edit-button:hover svg,
.button1:hover svg {
  fill: #00ffc4;
}
.delete-button:hover svg {
  fill: #ff0033;
}

/* Update existing button hover effects */
.edit-button:hover,
.delete-button:hover,
.description-button:hover,
.button1:hover {
  transform: scale(1.1);
  transition: transform 0.2s ease;
}

.custom-checkbox {
  border: 2px solid var(--accent-color);
  border-radius: 50%;
  min-height: 20px;
  min-width: 20px;
  display: flex;
  justify-content: center;
  align-items: center;
  flex-shrink: 0;
  transition: 600ms ease-in-out;
  cursor: pointer;
}

input[type="checkbox"]:checked ~ .custom-checkbox {
  background-color: var(--accent-color);
}
input[type="checkbox"]:checked ~ .custom-checkbox svg {
  fill: var(--primary-color);
}
input[type="checkbox"]:checked ~ .todo-text {
  text-decoration: line-through;
  color: var(--secondary-color);
}
input[type="checkbox"] {
  display: none;
}

.counter {
  border: 0.06rem solid var(--secondary-color);
  margin: 5px 0;
}

.counter-container {
  height: 1.5rem;
  display: flex;
  justify-content: space-between;
  align-items: center;
  color: var(--secondary-color2);
  padding-left: 10px;
  padding-top: 10px;
  padding-right: 10px;
}

.counter-container p {
  align-self: center;
}

.counter-container button {
  border: 0.1rem solid var(--secondary-color2);
  border-radius: 1rem;
  background-color: transparent;
  color: var(--secondary-color2);
  font-size: 0.9rem;
  margin: 0;
  padding: 0.3rem 0.8rem;
  display: flex;
  justify-content: center;
  align-items: center;
  text-align: center;
  cursor: pointer;
}

.counter-container button:hover {
  transition: 600ms ease-in-out;
}
.counter-container button:hover {
  border: 0.1rem solid #ff0033;
  /* color: #ff0033; */
}

footer {
  width: min(95vw, 1200px);
  margin-top: auto;
  border-radius: 0.5rem;
  text-align: center;
}

.made-by,
.author {
  font-size: 1rem;
  display: inline-block;
  color: var(--secondary-color2);
}

.made-by {
  margin-right: 0.5rem;
}

.author {
  font-weight: bold;
  color: var(--text-color);
}

@media only screen and (max-width: 768px) {
  body {
    font-size: 14pt;
  }

  .main {
    padding: 5px;
  }

  .wrapper {
    width: 95%;
    border-radius: 20px;
    padding: 15px;
  }

  .todo {
    padding: 8px;
  }

  .form1 {
    width: 100%;
  }

  footer {
    width: 100%;
    text-align: center;
  }

  .made-by,
  .author {
    display: inline-block;
    font-size: 0.9rem;
  }

  /* #todo-form { */
  /* position: relative; */
  /* display: inline-block; */
  /* flex-direction: row !important; Ensure row direction */
  /* } */

  #add-button {
    position: absolute;
    padding: 0;
    /* width: 25%; */
    margin-top: 0;
  }

  #sort-select {
    padding: 0 8px;
    font-size: 0.85rem;
  }
}

/* Small screens */
@media only screen and (max-width: 480px) {
  body {
    font-size: 12pt;
  }

  .todo .todo-text {
    font-size: 0.9rem;
  }

  .counter-container {
    flex-direction: row;
    justify-content: space-between;
    align-items: center;
    height: auto;
    padding: 5px;
  }

  .wrapper {
    padding: 10px;
  }

  .made-by,
  .author {
    font-size: 0.8rem;
  }
  #sort-select {
    padding: 0 6px;
    font-size: 0.8rem;
  }
}

/* Height-based media query */
@media screen and (max-height: 600px) {
  h1 {
    margin: 10px 0;
    font-size: clamp(1.5rem, 4vw, 2rem);
  }

  .wrapper {
    padding: 10px;
  }
}

/* Update existing search input styles */
/* .search-input { */
/* flex: 1; */
/* min-width: 45%; */
/* box-sizing: border-box; */
/* padding: 5px; */
/* background: rgb(15, 15, 15); */
/* border: 1px solid rgba(255, 255, 255, 0.5); */
/* border-radius: 1000px; */
/* font: inherit; */
/* color: var(--text-color); */
/* caret-color: var(--accent-color); */
/* z-index: 3; */
/* } */

/* Add these new styles for the search functionality */

.completed-separator {
  width: 100%;
  margin: 20px 0;
  display: flex;
  align-items: center;
  gap: 10px;
  opacity: 0.7;
  scroll-snap-align: start;
}

.completed-separator hr {
  flex: 1;
  border: none;
  height: 1px;
  background: var(--secondary-color);
}

.completed-separator span {
  color: var(--secondary-color2);
  font-size: 0.9rem;
  white-space: nowrap;
  padding: 0 10px;
}

/* Style for completed todos */
.todo.completed {
  opacity: 0.7;
  background: rgba(21, 21, 21, 0.5);
}

/* Add animation keyframes */
@keyframes slideIn {
  from {
    opacity: 0;
    transform: translateX(-20px);
  }
  to {
    opacity: 1;
    transform: translateX(0);
  }
}

@keyframes fadeIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

@keyframes shake {
  0%,
  100% {
    transform: translateX(0);
  }
  25% {
    transform: translateX(5px);
  }
  75% {
    transform: translateX(-5px);
  }
}

/* Add styles for drag and drop */
.todo {
  animation: slideIn 0.3s ease-out;
  transition: transform 0.2s ease, box-shadow 0.2s ease;
}

.todo.dragging {
  opacity: 0.5;
  box-shadow: 0 5px 15px rgba(0, 0, 0, 0.3);
}

/* Add styles for description */
.todo-content {
  flex: 1;
  min-width: 0;
  display: flex;
  flex-direction: column;
  gap: 4px;
}

.todo-description {
  font-size: 0.8em;
  color: var(--secondary-color2);
  margin-top: 2px;
  cursor: pointer;
  transition: color 0.3s ease;
}

.todo-description.has-description {
  color: var(--text-color);
}

.description-button {
  padding: 3px;
  background: none;
  border: none;
  display: flex;
  justify-content: center;
  align-items: center;
  cursor: pointer;
  transition: transform 0.3s ease;
}

.description-button:hover {
  transform: scale(1.1);
}

/* Add animation classes */
.todo-deleted {
  animation: slideIn 0.3s ease-out reverse;
}

.todo-completed {
  animation: fadeIn 0.3s ease-out;
}

.todo-error {
  animation: shake 0.3s ease-in-out;
}

/* Add hover effect for draggable items */
.todo:hover {
  cursor: grab;
  transform: translateY(-2px);
  box-shadow: 0 5px 15px rgba(0, 0, 0, 0.2);
}

.todo:active {
  cursor: grabbing;
}

/* Add styles for description input */
.description-input {
  font-size: 0.8em;
  background: none;
  border: none;
  border-bottom: 1px solid var(--accent-color);
  color: var(--text-color);
  padding: 2px 4px;
  width: 100%;
  outline: none;
  font-family: inherit;
}

.description-input:focus {
  background: rgba(0, 255, 196, 0.1);
}

.description-input::placeholder {
  color: var(--secondary-color2);
  opacity: 0.7;
}

/* Style for todo item when being edited */
.todo:has(.form1) {
  min-height: 100px; /* Increase height when editing */
  padding: 16px; /* Increase padding */
}

/* Container for buttons */
.button-container {
  display: flex;
  align-items: center;
  gap: 8px;
  justify-content: flex-end; /* Align buttons to the right */
  margin-top: 5px;
}

/* Add these styles to your existing CSS */
.todo .button-container {
  display: flex;
  align-items: center;
  gap: 8px;
  margin-top: 5px;
}

.todo .input1 {
  width: 100%;
  padding: 8px 12px;
  background: none;
  border: 1px solid rgba(255, 255, 255, 0.5);
  border-radius: 1000px;
  font: inherit;
  color: var(--text-color);
  caret-color: var(--accent-color);
}

.todo .input1:focus {
  outline: none;
  border-color: var(--accent-color);
}

/* Add this new style to keep button1 SVG filled when todo is in edit mode */
.todo:has(.input1) .button1 svg {
  fill: #00ffc4;
}

/* Update the existing hover style to use :not(:has(.input1)) to prevent double fill */
.button1:hover svg {
  fill: #00ffc4;
}

/* Style for description button when description is being edited */
.todo:has(.description-input) .description-button svg {
  fill: #00ffc4;
}

/* Update the existing hover styles to not override the active editing state */
.description-button:hover svg {
  fill: #00ffc4;
}

/* Add specific mobile styles */
@media only screen and (max-width: 768px) {
  .todo:has(.description-input) .description-button svg {
    fill: #00ffc4;
  }

  /* Ensure the fill color reverts back after submission */
  .todo:not(:has(.description-input)) .description-button svg {
    fill: var(--secondary-color);
  }
}

/* Add these styles to your existing style.css */

.install-prompt {
  position: fixed;
  bottom: 20px;
  left: 50%;
  transform: translateX(-50%);
  background: rgba(255, 255, 255, 0.1);
  backdrop-filter: blur(10px);
  -webkit-backdrop-filter: blur(10px);
  border: 1px solid rgba(255, 255, 255, 0.2);
  border-radius: 12px;
  padding: 15px 20px;
  display: none; /* Hidden by default */
  align-items: center;
  gap: 15px;
  z-index: 1000;
  box-shadow: 0 4px 30px rgba(0, 0, 0, 0.1);
  max-width: 90%;
  animation: slideUp 0.3s ease-out;
}

.install-prompt.show {
  display: flex;
}

.install-prompt-text {
  color: var(--text-color);
  font-size: 0.9rem;
  margin: 0;
}

.install-prompt-buttons {
  display: flex;
  gap: 10px;
}

.install-button,
.close-prompt-button {
  padding: 8px 16px;
  border: none;
  border-radius: 20px;
  font-size: 0.8rem;
  cursor: pointer;
  transition: transform 0.2s ease;
}

.install-button {
  background-color: var(--accent-color);
  color: var(--background);
  font-weight: 600;
}

.close-prompt-button {
  background-color: transparent;
  border: 1px solid var(--secondary-color);
  color: var(--text-color);
}

.install-button:hover,
.close-prompt-button:hover {
  transform: scale(1.05);
}

@keyframes slideUp {
  from {
    opacity: 0;
    transform: translate(-50%, 20px);
  }
  to {
    opacity: 1;
    transform: translate(-50%, 0);
  }
}

@media (max-width: 480px) {
  .install-prompt {
    flex-direction: column;
    text-align: center;
    bottom: 10px;
    padding: 12px 15px;
  }
}

/* Add update prompt styles */
.update-prompt {
  position: fixed;
  top: 20px;
  right: 20px;
  background: rgba(255, 255, 255, 0.1);
  backdrop-filter: blur(10px);
  -webkit-backdrop-filter: blur(10px);
  border: 1px solid rgba(255, 255, 255, 0.2);
  border-radius: 12px;
  padding: 15px 20px;
  display: none;
  flex-direction: column;
  gap: 15px;
  z-index: 1000;
  box-shadow: 0 4px 30px rgba(0, 0, 0, 0.1);
  animation: slideIn 0.3s ease-out;
}

.update-prompt.show {
  display: flex;
}

.update-prompt-text {
  color: var(--text-color);
  font-size: 0.9rem;
  margin: 0;
}

.update-prompt-buttons {
  display: flex;
  gap: 10px;
}

.update-button,
.update-later-button {
  padding: 8px 16px;
  border: none;
  border-radius: 20px;
  font-size: 0.8rem;
  cursor: pointer;
  transition: transform 0.2s ease;
}

.update-button {
  background-color: var(--accent-color);
  color: var(--background);
  font-weight: 600;
}

.update-later-button {
  background-color: transparent;
  border: 1px solid var(--secondary-color);
  color: var(--text-color);
}

.update-button:hover,
.update-later-button:hover {
  transform: scale(1.05);
}

/* List controls styles */
.list-controls {
  width: 100%;
  margin-bottom: 5px;
  /* padding: 0 15px; */
}

.list-selector {
  display: flex;
  gap: 10px;
  align-items: center;
  max-width: 100%;
}

#list-select {
  flex: 1;
  height: 40px;
  padding: 10px 15px;
  background: rgba(255, 255, 255, 0.1);
  border: 1px solid rgba(255, 255, 255, 0.3);
  border-radius: 25px;
  color: var(--text-color);
  font-size: 1rem;
  cursor: pointer;
  outline: none;
  backdrop-filter: blur(5px);
  -webkit-backdrop-filter: blur(5px);
}

#list-select:focus {
  border-color: var(--accent-color);
}

#list-select option {
  background: var(--primary-color);
  color: var(--text-color);
}

.icon-button {
  background: none;
  border: none;
  padding: 8px;
  cursor: pointer;
  border-radius: 50%;
  transition: background-color 0.3s ease;
  display: flex;
  align-items: center;
  justify-content: center;
}

.icon-button svg {
  fill: var(--secondary-color);
  transition: fill 0.3s ease;
}

.icon-button:hover {
  background: rgba(255, 255, 255, 0.1);
}

.icon-button:hover svg {
  fill: var(--accent-color);
}

/* Modal styles for list operations */
.modal {
  display: none;
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: rgba(0, 0, 0, 0.5);
  backdrop-filter: blur(5px);
  z-index: 1000;
  justify-content: center;
  align-items: center;
}

.modal.show {
  display: flex;
}

.modal-content {
  background: var(--primary-color);
  padding: 20px;
  border-radius: 15px;
  width: min(90%, 400px);
  border: 1px solid rgba(255, 255, 255, 0.1);
}

.modal-header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 20px;
}

.modal-title {
  color: var(--text-color);
  margin: 0;
  font-size: 1.2rem;
}

.modal-close {
  background: none;
  border: none;
  color: var(--secondary-color);
  cursor: pointer;
  font-size: 1.5rem;
  padding: 5px;
}

.modal-input {
  width: 100%;
  padding: 10px 15px;
  margin-bottom: 20px;
  background: rgba(255, 255, 255, 0.1);
  border: 1px solid rgba(255, 255, 255, 0.3);
  border-radius: 25px;
  color: var(--text-color);
  font-size: 1rem;
}

.modal-buttons {
  display: flex;
  justify-content: flex-end;
  gap: 10px;
}

.modal-button {
  padding: 8px 16px;
  border: none;
  border-radius: 20px;
  font-size: 0.9rem;
  cursor: pointer;
  transition: transform 0.2s ease;
}

.modal-button.primary {
  background-color: var(--accent-color);
  color: var(--background);
}

.modal-button.secondary {
  background-color: transparent;
  border: 1px solid var(--secondary-color);
  color: var(--text-color);
}

/* Help button styles */
/* .help-button { */
/* display: flex; */
/* align-items: center; */
/* gap: 10px; Space between icon and text */
/* padding: 8px 12px; Same padding as other menu items */
/* background: none; No background */
/* border: none; No border */
/* border-radius: 8px; Same border radius */
/* color: var(--text-color); Text color */
/* cursor: pointer; Pointer cursor */
/* transition: background 0.3s ease; Transition for hover effect */
/* } */

/* .help-button:hover { */
/* background: rgba(255, 255, 255, 0.1); Hover effect */
/* } */

/* Help window styles */
.help-window {
  display: none;
  position: fixed;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  width: min(90%, 600px);
  max-height: 80vh;
  background: var(--primary-color);
  border-radius: 15px;
  border: 1px solid rgba(255, 255, 255, 0.1);
  box-shadow: 0 4px 30px rgba(0, 0, 0, 0.1);
  backdrop-filter: blur(10px);
  -webkit-backdrop-filter: blur(10px);
  z-index: 1000;
  overflow: hidden;
}

.help-window.show {
  display: block;
  animation: fadeIn 0.3s ease;
}

.help-header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 15px 20px;
  border-bottom: 1px solid rgba(255, 255, 255, 0.1);
}

.help-header h2 {
  margin: 0;
  color: var(--accent-color);
  font-size: 1.2rem;
}

.close-help {
  background: none;
  border: none;
  color: var(--secondary-color2);
  font-size: 1.5rem;
  cursor: pointer;
  padding: 0 5px;
  transition: color 0.3s ease;
}

.close-help:hover {
  color: var(--accent-color);
}

.help-content {
  padding: 20px;
  overflow-y: auto;
  max-height: calc(80vh - 60px);
}

.help-content section {
  margin-bottom: 20px;
}

.help-content h3 {
  color: var(--accent-color);
  margin-bottom: 10px;
}

.help-content ul {
  list-style: none;
  padding-left: 0;
}

.help-content ul ul {
  padding-left: 20px;
  margin-top: 5px;
}

.help-content li {
  margin-bottom: 8px;
  color: var(--text-color);
  font-size: 0.9rem;
}

@keyframes fadeIn {
  from {
    opacity: 0;
    transform: translate(-50%, -48%);
  }
  to {
    opacity: 1;
    transform: translate(-50%, -50%);
  }
}

/* Add to your existing styles */
.notification-prompt {
  position: fixed;
  bottom: 20px;
  right: 20px;
  background: var(--primary-color);
  padding: 15px;
  border-radius: 10px;
  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
  z-index: 1000;
  animation: slideIn 0.3s ease;
}

@keyframes slideIn {
  from {
    transform: translateY(100%);
    opacity: 0;
  }
  to {
    transform: translateY(0);
    opacity: 1;
  }
}

/* Responsive adjustments */
@media only screen and (max-width: 768px) {
  .search-wrapper.active .search-input {
    width: calc(100vw - 120px);
  }
  .invisible {
    width: 40px !important;
    padding: 0 !important;
    margin: 0 !important;
    opacity: 0 !important;
    visibility: hidden !important;
    transition: all 0.3s ease !important;
    pointer-events: none !important;
  }
}

@media only screen and (max-width: 480px) {
  .search-wrapper.active .search-input {
    width: calc(100vw - 95px);
  }
  .invisible {
    width: 0px !important;
    padding: 0 !important;
    margin: 0 !important;
    opacity: 0 !important;
    visibility: hidden !important;
    transition: all 0.3s ease !important;
    pointer-events: none !important;
  }
}

/* Add these styles for better todo item structure */
.todo-checkbox-wrapper {
  display: flex;
  align-items: center;
}

.todo-content {
  flex: 1;
  min-width: 0;
  display: flex;
  flex-direction: column;
  gap: 4px;
}

/* Ensure labels are properly associated and styled */
.todo-text {
  display: block;
  flex: 1;
  min-width: 0;
  padding: 5px;
  padding-right: 0;
  overflow-wrap: break-word;
  word-break: break-word;
}

/* Add invisible state styles */

/* Update form container transition */
.form-container > * {
  transition: all 0.3s ease;
}

/* Ensure search input takes full width when active */

/* Hamburger menu styles */
.hamburger-menu {
  position: fixed;
  top: 10px;
  right: 44px;
  z-index: 100;
}

.hamburger-button {
  width: 24px;
  height: 24px;
  background: rgba(255, 255, 255, 0.1);
  border: none;
  border-radius: 50%;
  cursor: pointer;
  display: flex;
  flex-direction: column;
  justify-content: center;
  gap: 4px;
  padding: 5px;
  backdrop-filter: blur(5px);
  -webkit-backdrop-filter: blur(5px);
  transition: all 0.3s ease;
}

.hamburger-button span {
  display: block;
  width: 14px;
  height: 2px;
  background: var(--secondary-color2);
  transition: all 0.3s ease;
}

.hamburger-button.active span:nth-child(1) {
  transform: translateY(6px) rotate(45deg);
}

.hamburger-button.active span:nth-child(2) {
  opacity: 0;
}

.hamburger-button.active span:nth-child(3) {
  transform: translateY(-6px) rotate(-45deg);
}

.menu-content {
  position: absolute;
  top: 34px;
  right: 0;
  background: var(--primary-color);
  border-radius: 12px;
  padding: 8px;
  box-shadow: 0 4px 30px rgba(0, 0, 0, 0.1);
  backdrop-filter: blur(10px);
  -webkit-backdrop-filter: blur(10px);
  border: 1px solid rgba(255, 255, 255, 0.1);
  opacity: 0;
  visibility: hidden;
  transform: translateY(-10px);
  transition: all 0.3s ease;
}

.hamburger-menu.active .menu-content {
  opacity: 1;
  visibility: visible;
  transform: translateY(0);
}

.menu-item {
  display: flex;
  align-items: center;
  gap: 10px;
  padding: 8px 12px;
  width: 100%;
  background: none;
  border: none;
  border-radius: 8px;
  color: var(--text-color);
  cursor: pointer;
  transition: background-color 0.3s ease;
}

.menu-item svg {
  fill: var(--secondary-color);
  transition: fill 0.3s ease;
}

.menu-item:hover {
  background: rgba(255, 255, 255, 0.1);
}

.menu-item:hover svg {
  fill: var(--accent-color);
}

/* Update todo item styles */
.todo {
  width: 100%;
  margin-bottom: 10px;
  padding: 12px;
  background: rgba(255, 255, 255, 0.1);
  border-radius: 16px;
  display: flex;
  align-items: center;
  gap: 8px;
  min-height: 45px;
  transition: all 0.3s ease;
}

.todo-checkbox-wrapper {
  display: flex;
  align-items: center;
  pointer-events: auto; /* Enable events only for checkbox */
}

.todo-content {
  flex: 1;
  min-width: 0;
  display: flex;
  flex-direction: column;
  gap: 4px;
  pointer-events: none; /* Disable events for content */
}

.todo-text {
  pointer-events: none; /* Disable events for text */
}

/* Enable dragging on the todo item itself */
.todo[draggable="true"] {
  cursor: grab;
}

/* Style buttons container */
.todo-buttons {
  display: flex;
  gap: 4px;
  pointer-events: auto; /* Enable events for buttons */
}
